From eeae02d97523a1fea528e9b72cda2dfe6b8b78d3 Mon Sep 17 00:00:00 2001
From: "yifan.zhou" <yifan.zhou@thundersoft.com>
Date: Fri, 6 Dec 2024 19:22:08 +0800
Subject: [PATCH] Camera_Teledyne2: (Kernel)Change logic for read and write
 operation.

Change-Id: Id4769cc1b414bdc6527cc2f0ca75ce6a87236d0b
---
 .../cam_sensor_module/cam_sensor/cam_sensor_dev.c  | 56 +++++++++++++---------
 1 file changed, 33 insertions(+), 23 deletions(-)

diff --git a/drivers/cam_sensor_module/cam_sensor/cam_sensor_dev.c b/drivers/cam_sensor_module/cam_sensor/cam_sensor_dev.c
index c5c5dd5..16c0dca 100644
--- a/drivers/cam_sensor_module/cam_sensor/cam_sensor_dev.c
+++ b/drivers/cam_sensor_module/cam_sensor/cam_sensor_dev.c
@@ -18,6 +18,8 @@
 #include <linux/device.h>
 
 #define SYSFS_NODE_NAME "e2v_node"
+#define E2VTOPAZ_READ_MODE 0
+#define E2VTOPAZ_WRITE_MODE 1
 
 static int e2v_node_init = 0;
 struct camera_io_master e2v_master_info = {0};
@@ -52,6 +54,7 @@ static ssize_t e2v_node_show(struct device *dev, struct device_attribute *attr,
 static ssize_t e2v_node_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
 	int ret = 0;
+	int mode = -1;
 	uint32_t reg_addr;
     uint32_t reg_data;
 
@@ -60,9 +63,9 @@ static ssize_t e2v_node_store(struct device *dev, struct device_attribute *attr,
 
 	CAM_INFO(CAM_SENSOR, "%s: %d, buf from userspace: buf=%s, count=%d", __func__, __LINE__, buf, count);
 
-	sscanf(buf, "0x%x 0x%x", &reg_addr, &reg_data);
+	sscanf(buf, "%d 0x%x 0x%x", &mode, &reg_addr, &reg_data);
 
-	CAM_INFO(CAM_SENSOR, "%s: %d, reg_addr = 0x%02x, reg_data = 0x%04x", __func__, __LINE__, reg_addr, reg_data);
+	CAM_INFO(CAM_SENSOR, "%s: %d, mode: %d, reg_addr = 0x%02x, reg_data = 0x%04x", __func__, __LINE__, mode, reg_addr, reg_data);
 
 	if (reg_addr == 0)
 	{
@@ -70,35 +73,42 @@ static ssize_t e2v_node_store(struct device *dev, struct device_attribute *attr,
 		return -EFAULT;
 	}
 
-	if(reg_data == 0x9999) {
+	if(mode == E2VTOPAZ_READ_MODE) {
 		g_e2vTopazAddr = reg_addr;
 		CAM_INFO(CAM_SENSOR, "%s: %d, Call read function: reg_addr = 0x%02x, reg_data = 0x%04x", __func__, __LINE__, reg_addr, reg_data);
 		return count;
 	}
+	else if(mode == E2VTOPAZ_WRITE_MODE)
+	{
+		reg_array = (struct cam_sensor_i2c_reg_array) {
+			.reg_addr = reg_addr,
+			.reg_data = reg_data,
+			.delay = 0,
+			.data_mask = 0,
+		};
+
+		reg_setting = (struct cam_sensor_i2c_reg_setting) {
+			.reg_setting = &reg_array,
+			.size = 1,
+			.addr_type = CAMERA_SENSOR_I2C_TYPE_BYTE,
+			.data_type = CAMERA_SENSOR_I2C_TYPE_WORD,
+			.delay = 0,
+		};
+
+		ret = camera_io_dev_write(&e2v_master_info, &reg_setting);
+		if (ret < 0) {
+			CAM_ERR(CAM_SENSOR, "%s: %d, Failed to write to addr:0x%02x", __func__, __LINE__, reg_addr);
+			return -EFAULT;
+		}
 
-	reg_array = (struct cam_sensor_i2c_reg_array) {
-		.reg_addr = reg_addr,
-		.reg_data = reg_data,
-		.delay = 0,
-		.data_mask = 0,
-	};
-
-	reg_setting = (struct cam_sensor_i2c_reg_setting) {
-		.reg_setting = &reg_array,
-		.size = 1,
-		.addr_type = CAMERA_SENSOR_I2C_TYPE_BYTE,
-		.data_type = CAMERA_SENSOR_I2C_TYPE_WORD,
-		.delay = 0,
-	};
-
-	ret = camera_io_dev_write(&e2v_master_info, &reg_setting);
-	if (ret < 0) {
-		CAM_ERR(CAM_SENSOR, "%s: %d, Failed to write to addr:0x%02x", __func__, __LINE__, reg_addr);
+		CAM_INFO(CAM_SENSOR, "%s: %d, Write reg_addr: 0x%02x successfully, reg_data: 0x%04x", __func__, __LINE__, reg_addr, reg_data);
+	}
+	else
+	{
+		CAM_ERR(CAM_SENSOR, "%s: %d, Invalid operatioin mode: %d for e2vtopaz sensor", __func__, __LINE__, mode);
 		return -EFAULT;
 	}
 
-	CAM_INFO(CAM_SENSOR, "%s: %d, Write reg_addr: 0x%02x successfully, reg_data: 0x%04x", __func__, __LINE__, reg_addr, reg_data);
-
     return count;
 }
 
-- 
2.7.4

